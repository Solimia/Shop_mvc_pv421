
@model List<Product>

@{
    string delDialogId = "deleteConfirms";
    string editDialogId = "edit";
}

<h1>Product List</h1>


<a asp-action="Create" class="btn btn-primary my-1">Create new Product</a>

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Image</th>
            <th scope="col">Title</th>
            <th scope="col">Price</th>
            <th scope="col">Category</th>
            <th scope="col">Quantity</th>
            <th scope="col">Status</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var i in Model)
        {
            <tr>
                <th scope="row">@i.Id</th>
                <td class="grid-item-main-image">
                    <img src="@(i.ImageUrl ?? "https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg?20200913095930")" alt="@i.Title" height="40" />
                </td>
                <td>
                    <a href="a" @i.Title><span class="badge text-bg-primary">@i.Title</span></a>
                    
                </td>
                <td>
                    @if(i.Discount > 0)
                    {
                        <span class="text-decoration-line-through">@i.Price$</span>
                        <span class="ms-2">@((i.Price * (100 - i.Discount)) / 100)$</span>
                    }
                    else
                    {
                        <span>@i.Price$</span>
                    }
                </td>
                <td>@i.Category?.Name</td>
                <td>@i.Quantity</td>
                <td>
                    @if(i.Quantity > 0)
                    {
                        <span class="badge text-bg-success">In Stock</span>
                    }
                    else
                    {
                        <span class="badge text-bg-secondary">Out of Stock</span>
                    }
                
                <td>

                    <a data-bs-id=@i.Id data-bs-toggle="modal" data-bs-target="#@editDialogId" class="btn btn-outline-warning">Edit</a>
                    <a data-bs-id=@i.Id data-bs-toggle="modal" data-bs-target="#@delDialogId" class="btn btn-outline-danger">Delete</a>

            </tr>
		}
    </tbody>
</table>
@if (Model.Count == 0)
{
    <div class="tab-content">
        <img width="500" src="https://cdni.iconscout.com/illustration/premium/thumb/empty-state-concept-illustration-svg-download-png-2902554.png" alt="Alternate Text" />
    </div>
}

<button type="button" class="btn btn-primary" id="liveToastBtn">Show live toast</button>

@* <div class="toast-container position-fixed bottom-0 end-0 p-3">
<div class="toast align-items-center text-bg-danger border-0", id="liveToast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">
           

        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div>
</div> *@


<partial name="_ConfirmModalDialogPartial" model=@(new ConfirmDialogModel() 
         {
             DialogId = delDialogId,
			 Mode = DialogType.danger,
             Message = "Do you want to delete the product ?",
             Title = "Delete Confirmatoin"
         } )/>

<partial name="_ConfirmModalDialogPartial"model=@(new ConfirmDialogModel()
         {
              DialogId = editDialogId,
              Mode = DialogType.warning,
              Message = "Do you want to edit the product ?",
              Title = "Edit Confirmatoin"
          } ) />

@section Scripts {
    <script>
        configConfirmModal('@delDialogId', '/products/delete/');
        configConfirmModal('@editDialogId', '/products/edit/');



        const toastTrigger = document.getElementById('liveToastBtn')
        const toastLiveExample = document.getElementById('liveToast')

        if (toastTrigger) {
          const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample)
          toastTrigger.addEventListener('click', () => {
            toastBootstrap.show()
          })
        }


    </script>
}